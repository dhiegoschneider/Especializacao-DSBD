#CODIGO ATIVIDADE 01

import pandas as pd
import numpy as np 
from matplotlib.pyplot import *

#DATASET E FILTRO

bd1 = pd.read_csv('historico-alg1_SIGA_ANONIMIZADO.csv')
filtro_equivalencia = bd1[bd1['tipo'] == 'TURMA']

#QUESTAO 1

aprovados = filtro_equivalencia[filtro_equivalencia['status'] == 'Aprovado']

tabela_aprovados = aprovados[['ano', 'nota']]
media_aprovados = tabela_aprovados.groupby('ano').mean()
media_final_aprovados = media_aprovados.mean()
print("A media anual, e total dos aprovados sao,", media_aprovados, media_final_aprovados)

#PLOT 1

media_aprovados.plot()
axhline(y=np.nanmean(media_final_aprovados), color='green', linestyle='-', linewidth=1.5)
xlabel('Ano')
ylabel ('Nota')
title('Nota média dos aprovados, por ano')
savefig('figuraum.png')
show()

np.nanmean(media_final_aprovados)

#QUESTAO 2

reprovados = filtro_equivalencia[(filtro_equivalencia["status"] == 'R-nota')]
resultado_reprovados = reprovados[['ano', 'nota']]
media_reprovados = resultado_reprovados.groupby('ano').mean()
media_final_reprovados = media_reprovados.mean()
print("A media anual, e total dos aprovados sao,", media_reprovados, media_final_reprovados)

#PlOT 2

media_reprovados.plot()
axhline(y=np.nanmean(media_final_reprovados), color='green', linestyle='-', linewidth=1.5, label='Média total')
xlabel('Anos')
ylabel ('Notas')
title('Nota média dos reprovados, por ano')
savefig('figuradois.png')
show()

np.nanmean(media_final_reprovados)

#QUESTAO 3

reprovados = filtro_equivalencia[(filtro_equivalencia["status"] == 'R-nota')]
frequencia_reprovados = reprovados[['ano', 'frequencia']]
freq_media_reprovados = frequencia_reprovados.groupby('ano').mean()
frequencia_final_reprovados = freq_media_reprovados.mean()
print("A frequencia anual, e total dos reprovados sao,", media_reprovados, media_final_reprovados)

#PLOT 3

freq_media_reprovados.plot()
axhline(y=np.nanmean(frequencia_final_reprovados), color='green', linestyle='-', linewidth=1.5, label='Média total')
xlabel('Anos')
ylabel ('Frequencia')
title('Frequencia dos reprovados_nota por ano')
savefig('figuratres.png')
show()

np.nanmean(frequencia_final_reprovados)

#QUESTAO 4

filtro_equivalencia = bd1[bd1['tipo'] == 'TURMA']
evadidos_ptotal = filtro_equivalencia['situacaoDiscente'].value_counts(normalize = True)['Evasão'] * 100
print (evadidos_ptotal)

evadidos_panual = (filtro_equivalencia[filtro_equivalencia['situacaoDiscente'] == 'Evasão'].groupby('ano')['status'].count() / filtro_equivalencia.groupby('ano')['status'].count() * 100)
print(evadidos_panual) 

#PLOT 4 

anos_analisados = [2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022]
percentuais = [70.0, 25.0, 15.151515, 14.0, 19.101124, 24.175824, 15.702479, 17.708333, 12.318841, 2.479339]

plot(anos_analisados, percentuais, linestyle='-')

xlabel('Ano')
ylabel('Evasão (%)')
savefig('figuraquatro.png')
show()
